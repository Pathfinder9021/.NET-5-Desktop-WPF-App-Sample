<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=System.Runtime">

    <System:Double x:Key="WindowTitleBarIconHeight">30</System:Double>
    <System:Double x:Key="WindowTitleBarIconWidth">30</System:Double>
    <System:Double x:Key="WindowTitleBarButtonHeight">26</System:Double>
    <System:Double x:Key="WindowTitleBarButtonWidth">46</System:Double>

    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Grid>
                        <Rectangle x:Name="WindowBorderShadow" Fill="{DynamicResource WindowInactiveBackgroundBrush}" Margin="8"/>
                        <Border x:Name="WindowBorder"
                                Margin="8" 
                                ClipToBounds="True"
                                BorderBrush="{DynamicResource WindowInactiveBorderBrush}"
                                BorderThickness="1">
                            <!--<Rectangle Margin="-32" Fill="{TemplateBinding Background}">
                                <Rectangle.Effect>
                                    <BlurEffect KernelType="Gaussian" Radius="32" />
                                </Rectangle.Effect>
                            </Rectangle>-->
                            <Border.CacheMode>
                                <BitmapCache />
                            </Border.CacheMode>
                        </Border>
                        <ContentPresenter Margin="8" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="BorderBrush" TargetName="WindowBorder" Value="{DynamicResource WindowActiveBorderBrush}" />
                            <Setter Property="Fill" TargetName="WindowBorderShadow" Value="{DynamicResource WindowBackgroundBrush}" />
                            <Setter Property="Effect" TargetName="WindowBorderShadow" >
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource WindowBorderShadowColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="BorderThickness" TargetName="WindowBorder" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowTitleBarStyle" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="{DynamicResource WindowTitleBarHeight}" />
        <Setter Property="Background" Value="{DynamicResource WindowTitleBarBackgroundBrush}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                <Setter Property="Background" Value="{DynamicResource WindowInactiveTitleBarBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowTitlebarIconStyle" TargetType="Image">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Height" Value="{StaticResource WindowTitleBarIconHeight}"/>
        <Setter Property="Width" Value="{StaticResource WindowTitleBarIconWidth}"/>
    </Style>

    <Style x:Key="WindowTitlebarTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WindowTitleBarTextBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource WindowTitleBarTextFontSize}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="4 0 0 1"/>
       
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource WindowInactiveTitleBarTextBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowTitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource WindowTitleBarButtonForegroundBrush}" />
        <Setter Property="Height" Value="{StaticResource WindowTitleBarButtonHeight}"/>
        <Setter Property="Width" Value="{StaticResource WindowTitleBarButtonWidth}"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>

    <Style x:Key="DefaultTitleBarButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowTitleBarButtonStyle}">
        <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
						        x:Name="border"
						        Background="Transparent"
						        BorderThickness="0"
						        SnapsToDevicePixels="true">
                            <ContentPresenter
							        x:Name="contentPresenter"
							        Margin="0"
							        HorizontalAlignment="Center"
							        VerticalAlignment="Center"
							        Focusable="False"
							        RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PressedOverlayBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
    </Style>

    <Style x:Key="DangerTitleBarButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowTitleBarButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
						x:Name="border"
						Background="Transparent"
						BorderThickness="0"
						SnapsToDevicePixels="true">
                        <ContentPresenter
							x:Name="contentPresenter"
							Margin="0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Focusable="False"
							RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource WindowCloseButtonMouseOverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WindowCloseButtonMouseOverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource WindowCloseButtonPressedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WindowCloseButtonMouseOverForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>